{"ast":null,"code":"async function getChatBotResponse(messagesHistory, setMessagesHistory, setUserTrainingPlan, setUserDietPlan, setHasAllUserData) {\n  console.log(\"this is the messagesHistory: \" + messagesHistory);\n  const response = await fetch(\"http://localhost:5000/chatbot/chatbot\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      message: messagesHistory\n    })\n  });\n  const data = await response.json();\n  console.log(data);\n  console.log(\"this is the response data: \" + data.data.role + \" \" + data.content.content);\n  setMessagesHistory([...messagesHistory, {\n    role: data.content.role,\n    content: data.content.content\n  }]);\n  if (data.dietPlan && data.content.trainingPlan) {\n    setUserTrainingPlan(data.content.trainingPlan);\n    setUserDietPlan(data.content.dietPlan);\n    setHasAllUserData(true);\n  }\n}\nexport default getChatBotResponse;","map":{"version":3,"names":["getChatBotResponse","messagesHistory","setMessagesHistory","setUserTrainingPlan","setUserDietPlan","setHasAllUserData","console","log","response","fetch","method","headers","body","JSON","stringify","message","data","json","role","content","dietPlan","trainingPlan"],"sources":["/Users/luksuz/Desktop/seminarski fitness app/client/src/api.js"],"sourcesContent":["async function getChatBotResponse( messagesHistory, setMessagesHistory, setUserTrainingPlan, setUserDietPlan, setHasAllUserData ) {\n  console.log(\"this is the messagesHistory: \" + messagesHistory)\n    const response = await fetch(\"http://localhost:5000/chatbot/chatbot\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ message: messagesHistory}),\n    });\n    const data = await response.json();\n    console.log(data)\n    console.log(\"this is the response data: \" + data.data.role + \" \" + data.content.content)\n    setMessagesHistory([...messagesHistory, { role: data.content.role, content: data.content.content }]);\n    if (data.dietPlan && data.content.trainingPlan) {\n      setUserTrainingPlan(data.content.trainingPlan);\n      setUserDietPlan(data.content.dietPlan);\n      setHasAllUserData(true);\n    }\n  }\n\nexport default getChatBotResponse;"],"mappings":"AAAA,eAAeA,kBAAkBA,CAAEC,eAAe,EAAEC,kBAAkB,EAAEC,mBAAmB,EAAEC,eAAe,EAAEC,iBAAiB,EAAG;EAChIC,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAGN,eAAe,CAAC;EAC5D,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;IACpEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAEd;IAAe,CAAC;EAClD,CAAC,CAAC;EACF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;EAClCX,OAAO,CAACC,GAAG,CAACS,IAAI,CAAC;EACjBV,OAAO,CAACC,GAAG,CAAC,6BAA6B,GAAGS,IAAI,CAACA,IAAI,CAACE,IAAI,GAAG,GAAG,GAAGF,IAAI,CAACG,OAAO,CAACA,OAAO,CAAC;EACxFjB,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAE;IAAEiB,IAAI,EAAEF,IAAI,CAACG,OAAO,CAACD,IAAI;IAAEC,OAAO,EAAEH,IAAI,CAACG,OAAO,CAACA;EAAQ,CAAC,CAAC,CAAC;EACpG,IAAIH,IAAI,CAACI,QAAQ,IAAIJ,IAAI,CAACG,OAAO,CAACE,YAAY,EAAE;IAC9ClB,mBAAmB,CAACa,IAAI,CAACG,OAAO,CAACE,YAAY,CAAC;IAC9CjB,eAAe,CAACY,IAAI,CAACG,OAAO,CAACC,QAAQ,CAAC;IACtCf,iBAAiB,CAAC,IAAI,CAAC;EACzB;AACF;AAEF,eAAeL,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}